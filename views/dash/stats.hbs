

  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
      <h1>
        Statistics
        <small>Everything you'll ever need to know</small>
      </h1>
      <ol class="breadcrumb">
        <li><a href="/dashboard"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        <li><a href="/dashboard"><i class="fa fa-line-chart"></i> Statistics</a></li>
      </ol>
    </section>

    <!-- Main content -->
    <section class="content container-fluid">
      <div class="row">
        <div class="col-xs-12">
          <!-- interactive chart -->
          <div class="box box-primary">
            <div class="box-header">
              <i class="fa fa-bar-chart-o"></i>

              <h3 class="box-title">Live People Count</h3>

              <div class="box-tools pull-right">
                Real time
              </div>
            </div>
            <div class="box-body">
              <div id="interactive" style="height: 300px;"></div>
            </div>
            <!-- /.box-body-->
          </div>
          <!-- /.box -->

        </div>
        <!-- /.col -->
      </div>

      <! START PIE CHART>
      <div class="row">
        <div class="col-xs-6">
          <!-- interactive chart -->
          <div class="box box-primary">
            <div class="box-header">
              <i class="fa fa-bar-chart-o"></i>

              <h3 class="box-title">Today's location Stats</h3>

              <div class="box-tools pull-right">
                <div class="form-group">
                  <select id="pieSelect" class="form-control">
                    <option data-date="Today" id="pietoday">Today</option>
                    <option data-date="Week" id="pieweek">This week</option>
                    <option data-date="Month" id="pimonth">This month</option>
                    <option data-date="Year" id="piyear">This year</option>
                  </select>
                </div>
              </div>

            </div>
            <div class="box-body">
              <div id="donut-chart" style="height: 300px;"></div>
            </div>
            <!-- /.box-body-->
          </div>
          <!-- /.box -->

        </div>
        <!-- /.col -->
      </div>
      <!--------------------------
        | Your Page Content Here |
        -------------------------->

    </section>
    <!-- /.content -->
  </div>
  <!-- /.content-wrapper -->

<!-- REQUIRED JS SCRIPTS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/flot/0.8.3/jquery.flot.js"></script>
<!-- FLOT RESIZE PLUGIN - allows the chart to redraw when the window is resized -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/flot/0.8.3/jquery.flot.resize.js"></script>
<!-- FLOT PIE PLUGIN - also used to draw donut charts -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/flot/0.8.3/jquery.flot.pie.js"></script>

<script>
  $(function () {
    /*
     * Flot Interactive Chart
     * -----------------------
     */
    // We use an inline data source in the example, usually data would
    // be fetched from a server
    
    var data = [], totalPoints = 15

    var hostname = location.protocol + "//" + location.host;

    var lastUpdate = 0;

    function updateTotal(total) {

      // Don't add any data if there's no new updates
      if (total.lastUpdate <= lastUpdate) {
        return;
      }

      console.log("New Count: " + total.count);

      data.push(total.count);

      if (data.length > totalPoints+1) {
        data.shift();
      }

      var newArr = [];
      for (var i = 0; i < data.length; i++) {
        newArr.push([i, data[i]]);
      }
      console.log(newArr);
      interactive_plot.setData([newArr]);

      interactive_plot.draw()

      lastUpdate = total.lastUpdate;
    }

    function getCurrentTotalCount() {

      $.getJSON(`${hostname}/bee/status/total`, updateTotal);

    }

    $(function() {
      setInterval(getCurrentTotalCount, 1000);
    });

    var interactive_plot = $.plot('#interactive', data, {
      grid  : {
        borderColor: '#f3f3f3',
        borderWidth: 1,
        tickColor  : '#f3f3f3'
      },
      series: {
        shadowSize: 0, // Drawing is faster without shadows
        color     : '#3c8dbc'
      },
      lines : {
        fill : true, //Converts the line chart to area chart
        color: '#3c8dbc'
      },
      yaxis : {
        min : 0,
        max: 100,
        show: true
      },
      xaxis : {
        max: totalPoints,
        show: true
      }
    });

    //INITIALIZE REALTIME DATA FETCHING
    /*
    if (realtime === 'on') {
      pdateTotal()
    }
    //REALTIME TOGGLE
    $('#realtime .btn').click(function () {
      if ($(this).data('toggle') === 'on') {
        realtime = 'on'
      }
      else {
        realtime = 'off'
      }
      updateTotal();
    });*/

    var donutData = [
   { label: 'Laptop #1', data: 70, color: '#3c8dbc' },
   { label: 'room #3', data: 20, color: '#0073b7' },
   { label: 'Raspberry Pi #1', data: 175, color: '#00c0ef' }
 ]
   var weekData = [
  { label: 'room #3', data: 10, color: '#3c8dbc' },
  { label: 'Laptop #1', data: 20, color: '#0073b7' },
  { label: 'Raspberry Pi #1', data: 30, color: '#00c0ef' }
 ]
  var monthData = [
  { label: 'room #3', data:80, color: '#3c8dbc' },
  { label: 'Laptop #1', data: 150, color: '#0073b7' },
  { label: 'Raspberry Pi #1', data: 200, color: '#00c0ef' }
  ]
  var yearData = [
  { label: 'room #3', data:164, color: '#3c8dbc' },
  { label: 'Laptop #1', data: 592, color: '#0073b7' },
  { label: 'Raspberry Pi #1', data: 1245, color: '#00c0ef' }
  ]
 $('#pieSelect').on('change', function(event) {
        var opt = this.options[ this.selectedIndex ];
        opt = $(opt).text()
        if (opt == 'Today')
        {
          $.plot('#donut-chart', donutData, {
            series: {
              pie: {
                show       : true,
                radius     : 1,
                innerRadius: 0.5,
                label      : {
                  show     : true,
                  radius   : 2 / 3,
                  formatter: labelFormatter,
                  threshold: 0.1
                }

              }
            },
            legend: {
              show: true
            }
          })
        }
        else if (opt == 'This week')
        {
          $.plot('#donut-chart', weekData, {
            series: {
              pie: {
                show       : true,
                radius     : 1,
                innerRadius: 0.5,
                label      : {
                  show     : true,
                  radius   : 2 / 3,
                  formatter: labelFormatter,
                  threshold: 0.1
                }

              }
            },
            legend: {
              show: true
            }
          })
        }
        else if (opt == 'This month')
        {
          $.plot('#donut-chart', monthData, {
            series: {
              pie: {
                show       : true,
                radius     : 1,
                innerRadius: 0.5,
                label      : {
                  show     : true,
                  radius   : 2 / 3,
                  formatter: labelFormatter,
                  threshold: 0.1
                }

              }
            },
            legend: {
              show: true
            }
          })
        }
        else if (opt == 'This year')
        {
          $.plot('#donut-chart', yearData, {
            series: {
              pie: {
                show       : true,
                radius     : 1,
                innerRadius: 0.5,
                label      : {
                  show     : true,
                  radius   : 2 / 3,
                  formatter: labelFormatter,
                  threshold: 0.1
                }

              }
            },
            legend: {
              show: true
            }
          })
        }
    });
    $.plot('#donut-chart', donutData, {
      series: {
        pie: {
          show       : true,
          radius     : 1,
          innerRadius: 0.5,
          label      : {
            show     : true,
            radius   : 2 / 3,
            formatter: labelFormatter,
            threshold: 0.1
          }

        }
      },
      legend: {
        show: true
      }
    })

 /*
  * END DONUT CHART
  */
  function labelFormatter(label, series) {
    return '<div style="font-size:13px; text-align:center; padding:2px; color: #fff; text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000; font-weight: 600;">'
      + label
      + '<br>'
      + Math.round(series.percent) + '%</div>'
  }
  });
</script>
<!-- ChartJS -->
